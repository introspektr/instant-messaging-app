/**
 * Global CSS Styles
 * 
 * This file contains application-wide styles and sets up:
 * 1. Tailwind CSS framework
 * 2. Base HTML element styling
 * 3. CSS variables for theming (light and dark modes)
 * 4. Root layout settings
 */

/* Tailwind CSS Imports
 * These imports bring in the Tailwind CSS framework which provides utility classes
 * that you can use directly in your HTML/JSX.
 * 
 * Example: <div className="flex items-center"> creates a flexbox with centered items
 */
@import 'tailwindcss/base';      /* Base styles and CSS reset */
@import 'tailwindcss/components'; /* Component classes */
@import 'tailwindcss/utilities';  /* Utility classes */
@import './styles/base.css';      /* Our custom base styles */

/**
 * Full-height Layout
 * 
 * These styles ensure the app takes up the full height of the browser window
 * and prevents scrollbars from appearing unless content overflows.
 */
html, body {
  height: 100%;
  margin: 0;
  padding: 0;
  overflow: hidden; /* Prevents scrollbars by default */
}

body {
  min-height: 100vh; /* 100% of viewport height */
  margin: 0;
  padding: 0;
  overflow: hidden;
}

/* Make the React root element take up full height */
#root {
  height: 100vh;
  display: flex;
  flex-direction: column; /* Stack children vertically */
}

/**
 * Base Typography and Colors
 * 
 * Sets the default font family, sizes, and colors for the application.
 * The color-scheme property also tells the browser about our dark/light modes.
 */
:root {
  /* Font settings */
  font-family: Inter, system-ui, Avenir, Helvetica, Arial, sans-serif;
  line-height: 1.5;
  font-weight: 400;

  /* Color scheme support for browser elements like scrollbars */
  color-scheme: light dark;
  
  /* Default (dark) colors */
  color: rgba(255, 255, 255, 0.87); /* Text color - slightly off-white */
  background-color: #242424;        /* Background - dark gray */

  /* Font rendering optimizations */
  font-synthesis: none;             /* Don't synthesize fonts when not available */
  text-rendering: optimizeLegibility; /* Optimize for readability */
  -webkit-font-smoothing: antialiased; /* Smooth fonts on WebKit browsers */
  -moz-osx-font-smoothing: grayscale;  /* Smooth fonts on Firefox/macOS */
}

/**
 * Dark Mode Settings
 * 
 * The .dark class is applied to the body when the app is in dark mode.
 * It overrides the default colors with dark-specific variables.
 */
.dark {
  color: var(--darkForeground);      /* Text color from CSS variable */
  background-color: var(--darkBackground); /* Background from CSS variable */
}

/**
 * Link Styling
 * 
 * Styles for <a> elements (links) including normal and hover states.
 */
a {
  font-weight: 500;
  color: var(--darkAccent);       /* Link color from CSS variable */
  text-decoration: inherit;       /* Remove underline */
}
a:hover {
  color: lighten(var(--darkAccent), 10%); /* Lighter version on hover */
}

/**
 * Header Styling
 * 
 * Style for the primary heading.
 */
h1 {
  font-size: 3.2em;
  line-height: 1.1;  /* Tighter line height for headings */
}

/**
 * Button Styling
 * 
 * Default style for buttons across the application,
 * including hover and focus states for good accessibility.
 */
button {
  border-radius: 8px;
  border: 1px solid transparent;
  padding: 0.6em 1.2em;
  font-size: 1em;
  font-weight: 500;
  font-family: inherit;
  background-color: #1a1a1a;
  cursor: pointer;                /* Shows hand cursor on hover */
  transition: border-color 0.25s; /* Smooth transition for hover effect */
}
button:hover {
  border-color: #646cff;          /* Highlight border on hover */
}
button:focus,
button:focus-visible {
  outline: 4px auto -webkit-focus-ring-color; /* Accessibility focus outline */
}

/**
 * Light Mode Media Query
 * 
 * These styles only apply when the user's system preferences are set to light mode.
 * They override the default dark colors with lighter versions.
 */
@media (prefers-color-scheme: light) {
  :root {
    color: #213547;
    background-color: #ffffff;
  }
  a:hover {
    color: #747bff;
  }
  button {
    background-color: #f9f9f9;
  }
}

/**
 * CSS Variables for Theming
 * 
 * These variables define colors and other theme values that can be used
 * throughout the application. Using CSS variables makes it easy to:
 * 1. Maintain consistent colors
 * 2. Switch between themes (like dark/light mode)
 * 3. Update the design system in one place
 * 
 * The syntax is: var(--variable-name)
 */
@layer base {
  /* Light Theme Variables */
  :root {
    --background: 0 0% 100%;            /* White background */
    --foreground: 222.2 84% 4.9%;       /* Near-black text color */
    --card: 0 0% 100%;                  /* White card background */
    --card-foreground: 222.2 84% 4.9%;  /* Near-black card text */
    --popover: 0 0% 100%;               /* White popover background */
    --popover-foreground: 222.2 84% 4.9%; /* Near-black popover text */
    --primary: 222.2 47.4% 11.2%;       /* Primary color - dark blue */
    --primary-foreground: 210 40% 98%;  /* White-ish text on primary color */
    --secondary: 210 40% 96.1%;         /* Secondary color - light blue/gray */
    --secondary-foreground: 222.2 47.4% 11.2%; /* Dark text on secondary color */
    --muted: 210 40% 96.1%;             /* Muted background - light gray */
    --muted-foreground: 215.4 16.3% 46.9%; /* Muted text - medium gray */
    --accent: 210 40% 96.1%;            /* Accent color - light blue/gray */
    --accent-foreground: 222.2 47.4% 11.2%; /* Dark text on accent color */
    --destructive: 0 84.2% 60.2%;       /* Destructive actions - red */
    --destructive-foreground: 210 40% 98%; /* Light text on destructive color */
    --border: 214.3 31.8% 91.4%;        /* Border color - very light gray */
    --input: 214.3 31.8% 91.4%;         /* Input border color */
    --ring: 222.2 84% 4.9%;             /* Focus ring color - near black */
    
    /* Chart colors for data visualizations */
    --chart-1: 12 76% 61%;              /* Orange-red */
    --chart-2: 173 58% 39%;             /* Teal */
    --chart-3: 197 37% 24%;             /* Dark blue */
    --chart-4: 43 74% 66%;              /* Yellow */
    --chart-5: 27 87% 67%;              /* Orange */
    
    --radius: 0.5rem;                   /* Default border radius */
  }
  
  /* Dark Theme Variables - applied when .dark class is present */
  .dark {
    --background: 222.2 84% 4.9%;       /* Near-black background */
    --foreground: 210 40% 98%;          /* Near-white text */
    --card: 222.2 84% 4.9%;             /* Dark card background */
    --card-foreground: 210 40% 98%;     /* Light card text */
    --popover: 222.2 84% 4.9%;          /* Dark popover background */
    --popover-foreground: 210 40% 98%;  /* Light popover text */
    --primary: 210 40% 98%;             /* Primary color - light blue/white */
    --primary-foreground: 222.2 47.4% 11.2%; /* Dark text on primary */
    --secondary: 217.2 32.6% 17.5%;     /* Secondary color - dark gray/blue */
    --secondary-foreground: 210 40% 98%; /* Light text on secondary */
    --muted: 217.2 32.6% 17.5%;         /* Muted background - dark gray */
    --muted-foreground: 215 20.2% 65.1%; /* Muted text - light gray */
    --accent: 217.2 32.6% 17.5%;        /* Accent - dark gray/blue */
    --accent-foreground: 210 40% 98%;   /* Light text on accent */
    --destructive: 0 62.8% 30.6%;       /* Destructive - darker red */
    --destructive-foreground: 210 40% 98%; /* Light text on destructive */
    --border: 217.2 32.6% 17.5%;        /* Border - dark gray */
    --input: 217.2 32.6% 17.5%;         /* Input border - dark gray */
    --ring: 212.7 26.8% 83.9%;          /* Focus ring - light gray/blue */
    
    /* Dark theme chart colors */
    --chart-1: 220 70% 50%;             /* Vibrant blue */
    --chart-2: 160 60% 45%;             /* Teal */
    --chart-3: 30 80% 55%;              /* Orange */
    --chart-4: 280 65% 60%;             /* Purple */
    --chart-5: 340 75% 55%;             /* Pink */
  }
}

/* Apply theme colors to the body */
body {
  background-color: var(--darkBackground);
  color: var(--darkForeground);
}